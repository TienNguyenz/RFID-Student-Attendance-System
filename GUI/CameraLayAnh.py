# Form implementation generated from reading ui file 'ui/face_dataset.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
import os
import cv2 , time
from PyQt6.QtCore import QTimer
from PyQt6.QtWidgets import QMessageBox

import os
import sys
SCRIPT_DIR = os.path.dirname(os.path.abspath(__file__))
sys.path.append(os.path.dirname(SCRIPT_DIR))
from BUS.face_dataset import face_dataset

from PyQt6.QtCore import QThread, pyqtSignal, Qt

class CameraLayAnh(object):
    def setupUi(self, MainWindow):
        self.thread = {}

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(640, 480)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setStyleSheet("#label\n"
"{\n"
"border: 1px solid black;\n"
"}")
        self.label.setText("")
        self.label.setObjectName("label")
        self.verticalLayout_2.addWidget(self.label)
        self.pushButton = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton.clicked.connect(self.start_capture_video)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("#pushButton\n"
"{\n"
"font-weight: bold;\n"
"}")
        self.pushButton.setObjectName("pushButton")
        self.verticalLayout_2.addWidget(self.pushButton)

        MainWindow.setCentralWidget(self.centralwidget)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Quét Barcode Sinh Viên"))
        self.pushButton.setText(_translate("MainWindow", "Quét"))

    def __init__(self, id):
        self.idSV = id

    def start_capture_video(self):
        if not hasattr(self, 'thread') or self.thread.get(1) is None:
            self.thread[1] = face_dataset(0, self.idSV)  # Sử dụng camera mặc định
            self.thread[1].signal.connect(self.show_webcam)
            self.thread[1].start()
        else:
            QMessageBox.warning(self.centralwidget, "Thông báo", "Luồng quét barcode đã đang chạy!")

    def show_webcam(self, cv_img):
        """Cập nhật hình ảnh từ webcam"""
        if (cv_img == [0]).all():
            QMessageBox.information(self.centralwidget, "Thông báo", "Quá trình quét barcode thành công!")
        else:
            qt_img = self.convert_cv_qt(cv_img)
            self.label.setPixmap(qt_img)

    def convert_cv_qt(self, cv_img):
        """Chuyển đổi hình ảnh từ OpenCV sang QPixmap"""
        rgb_image = cv2.cvtColor(cv_img, cv2.COLOR_BGR2RGB)
        h, w, ch = rgb_image.shape
        bytes_per_line = ch * w
        convert_to_Qt_format = QtGui.QImage(rgb_image.data, w, h, bytes_per_line, QtGui.QImage.Format.Format_RGB888)
        p = convert_to_Qt_format.scaled(640, 480, Qt.AspectRatioMode.KeepAspectRatio)
        return QtGui.QPixmap.fromImage(p)


